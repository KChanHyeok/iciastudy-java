
생성자
    인스턴스의 필드(멤버변수)를 초기화하기 위해 사용하는
    특수 메소드.
    클래스와 같은 이름을 사용하며, 반환형을 붙이지 않는다.
    인스턴스 생성을 위해 public을 붙여준다.

생성자 오버로딩
    다양한 매개변수를 갖는 여러개의 생성자를 작성할 수 있다.

this 란?
    여기, 이곳. 인스턴스를 구별하기 위한 방법. 일종의 참조변수.
    멤버를 지칭하는 대명사.
    this.변수명 -> 같은 이름의 멤버 변수와 지역변수를 구분하는 용도.

    생성자를 나타내는 this() 메소드.
        유일하게 생성자를 호출하는 용도로 사용하는 this().
        생성자 안에서 다른 생성자를 호출하는데 사용한다.

상속(Inheritance)
    - 기존의 클래스를 재사용하여 새로운 클래스를 작성하는 것.
    - 두 클래스는 조상(부모), 자손(자식) 관계를 형성.
    - 자손 클래스는 조사 클래스의 모든 멤버를 상속받는다.
      (생성자와 private 멤버 제외)
    - 자손의 멤버 개수는 조상보다 적을 수 없다.(같거나 많다)
    - 단일 상속만 허용.

모든 클래스는 Object 클래스를 상속받아서 만들어 진다.
모든 클래스는 Object 클래스의 자손이므로 생략.

상속 문법 : extends
    자바 상속용 키워드. 새로 만들 클래스명 뒤에 이 키워드와
    부모클래스의 이름을 작성한다.

    class Parent [extends Object] {} //extends Object 생략.
    class Child extends Parent {}
    class child2 extends Parent {}
    class GrandChild extends Child1{}

메소드 재정의(Method Overriding)
    부모 클래스의 메소드를 자식 클래스에서 재정의. 덮어쓰기.
    기본 조건)
    메소드의 선언부가 동일해야 한다.

    void method1()  -> 선언부
  -------------------------
    {
        .....        -> 정의부(body, 몸통)
    }

Annotation
    컴파일 되는 주석. 컴파일러에게 주는 명령어.
    @Override : 이 메소드는 재정의된 메소드임을 알려주는 목적의 주석.

Object 클래스의 메소드를 재정의 하자.
    toString() 메소드 : 인스턴스를 출력할 경우 '패키지.클래스명@16진수해쉬넘버' 형태로 출력.

super : 부모클래스를 지칭하는 대명사와 같은 의미.
    부모클래스의 멤버와 자식 클래스의 멤버를 구분하는데 사용.
    이름이 같은 멤버의 구분에 사용.
    super.멤버

    super() : 부모클래스의 생성자를 호출할 때 사용.
        자식 클래스의 생성자에서만 사용 가능.
        자식 클래스 생성자인 맨 첫줄에 위치해야 한다.
