상속 : 기존 클래스를 재사용하여 새로운 클래스를 생성하는 것.
    extends 키워드를 사용.
    class 새클래스명 extends 기존클래스명 { }

this와 super
    this : 단일 클래스.
      this.변수명 : 멤버변수와 지역변수의 구분
      this() : 한 생성자에서 다른 생성자를 호출할 때 사용.
    super : 상속 관계 클래스들.
      super.변수명 : 부모클래스의 멤버변수
      super() : 부모클래스의 생성자


접근제어자 protected
    같은 패키지, 상속 받은 하위(자식)클래스에서만 접근(사용) 가능.
    같은 패키지인 경우 default와 같으나, 다른 패키지여도 상속하여 작성한 클래스라면 사용 가능하다.

    제어자
    1) 접근제어자 : public, protected, (default), private
    2) 비접근제어자 : static, final, abstract(추상화)

객체 지향 특성
1. 캡슐화(정보은닉)
2. 상속
3. 다형성
4. 추상화

다형성(Polymorphism)
    하나의 참조변수로 여러 타입의 인스턴스를 저장하는 것.
    같은 이름 다른 형태.
    메소드 오버로드(같은 메소드를 여러개 작성)

    부모클래스를 저장하는 변수에 자식 클래스를 저장할 수 있다.
    자식 클래스로 만든 인스턴스를 부모 클래스의 참조변수에
    담을 수 있다.

    형변환 : 객체의 경우 상속 관계에서만 형변환이 가능.
      up cast - 자식 인스턴스를 부모 참조변수에 저장.
      down cast - 부모 참조변수에 저장된 인스턴스(자식)를 자식 참조변수로 되돌리는 것.

      부모클래스로 만든 인스턴스는 자식 클래스로 만든 참조변수에 저장할 수 없다!

    부모의 참조변수에 저장한 인스턴스는 새로 추가한 멤버를 사용할 수 없다.
    사용을 위해서는 다시 원래의 인스턴스로 복원해야 한다.(down cast)

    instanceof 연산자(명령어) : 인스턴스가 어던 클래스로 만든 건지 확인하는 명령어. (true/false)


